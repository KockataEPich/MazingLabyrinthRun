{
    "FacingSide" :
    {
        "var_name" : "facing_side", 
        "type" : "data",
        "needs_cpp" : false,
        "includes" : ["<attribute/facing_side.h>"],
        "members" : [
            {
                "FacingSide" : 
                {
                    "is_parameter" : true,
                    "name" : "side",
                    "default_value" : "FacingSide::left"
                } 
            }
        ]
        
    },

    "Transform" :
    {
        "type" : "data",
        "needs_cpp" : false,
        "includes" : ["<SFML/System/Vector2.hpp>", "<utils/sfml_vector_helpers.h>"],
        "members" : [
            {
                "sf::Vector2f" : 
                {
                    "is_parameter" : true,
                    "name" : "position"
                } 
            },
            {
                "sf::Vector2f" : 
                {
                    "is_parameter" : true,
                    "name" : "scale"
                } 
            },
            {
                "sf::Vector2f" : 
                {
                    "is_parameter" : true,
                    "name" : "size"
                } 
            }
        ],
        "functions" : ["sf::Vector2f get_scaled_size() {return abs(scale) * size; }"]
    },
    "ActionType" :
    {
        "var_name" : "action_type", 
        "type" : "data",
        "needs_cpp" : false,
        "includes" : ["<attribute/action_type.h>"],
        "members" : [
            {
                "ActionType" : 
                {
                    "is_parameter" : true,
                    "name" : "action_type",
                    "default_value" : "ActionType::idle"
                } 
            }
        ]
    },

    "Speed" :
    {
        "type" : "data",
        "needs_cpp" : false,
        "includes" : [],
        "members" : [
            {
                "float" : 
                {
                    "is_parameter" : true,
                    "name" : "speed"
                } 
            }
        ]
    },

    "Sprite" :
    {
        "type" : "data",
        "needs_cpp" : false,
        "includes" : ["<sfml/Graphics/Sprite.hpp>"],
        "members" : [
            {
                "sf::Sprite" : 
                {
                    "is_parameter" : true,
                    "moved" : true,
                    "name" : "sprite"
                } 
            }
        ]
    },

    "Skin" :
    {
        "type" : "data",
        "needs_cpp" : false,
        "includes" : ["<resource/skins.h>"],
        "members" : [
            {
                "Skin" : 
                {
                    "is_parameter" : true,
                    "moved" : true,
                    "name" : "skin",
                    "default_value" : "Skin::DEFAULT_PLACEHOLDER_SKIN"
                } 
            }
        ]
    },

    "Velocity" :
    {
        "var_name" : "velocity", 
        "type" : "data",
        "needs_cpp" : false,
        "includes" : ["<SFML/System/Vector2.hpp>"],
        "members" : [
            {
                "sf::Vector2f" : 
                {
                    "is_parameter" : true,
                    "name" : "final_destination"
                }
            },
            {
                "sf::Vector2f" : 
                {
                    "is_parameter" : true,
                    "name" : "velocity"
                }
            },
            {
                "sf::Vector2f" : 
                {
                    "is_parameter" : true,
                    "name" : "origin"
                }
            },
            {
                "std::function<sf::Vector2f(const sf::Vector2f&, const sf::Vector2f&, const float)>" :
                {
                    "is_parameter" : true,
                    "name" : "calculate_velocity_function"
                }
            }
        ]
    },

    "ElevationLevel" :
    {
        "var_name" : "elevation_level", 
        "type" : "data",
        "needs_cpp" : false,
        "includes" : ["<attribute/elevation_level.h>"],
        "members" : [
            {
                "ElevationLevel" : 
                {
                    "is_parameter" : true,
                    "name" : "level",
                    "default_value" : "ElevationLevel::two"
                } 
            }
        ]
    },

    "HealthPoints" :
    {
        "var_name" : "health_points", 
        "type" : "data",
        "needs_cpp" : false,
        "members" : [
            {
                "int" : 
                {
                    "is_parameter" : true,
                    "name" : "health",
                    "default_value" : "50"
                } 
            },

            {
                "int" : 
                {
                    "is_parameter" : true,
                    "name" : "max_health",
                    "default_value" : "50"
                } 
            }
        ]
    },

    "AnimationPlayer" :
    {
        "var_name" : "animation_player", 
        "type" : "data",
        "needs_cpp" : false,
        "includes" : ["<animation/animation_player.h>"],
        "members" : [
            {
                "AnimationPlayer" : 
                {
                    "is_parameter" : true,
                    "name" : "animation_player"
                } 
            }
        ]
    },

    "Boundary" :
    {
        "type" : "data",
        "needs_cpp" : false,
        "includes" : ["<SFML/Graphics/Rect.hpp>"],
        "members" : [
            {
                "sf::FloatRect" : 
                {
                    "is_parameter" : true,
                    "name" : "hitbox"
                } 
            }
        ]
    },

    "Player" : { "type" : "basic" },
    "Solid" : { "type" : "basic" },
    "Mouse" : { "type" : "basic" },
    "AI" : { "type" : "basic" },

    "BasicAttackNeedle" : { "var_name" : "basic_attack_needle", "type" : "basic"},
    "DefaultCollisionArmor" : {  "var_name" : "default_collision_armor", "type" : "basic" },

    "Projectile" : { "type" : "basic" }

}